"""
This type stub file was generated by pyright.
"""

"""
The serialization module

:authors: Josh Marshall, Thomas Calmant
:copyright: Copyright 2025, Thomas Calmant
:license: Apache License 2.0
:version: 0.4.3.4

..

    Copyright 2025 Thomas Calmant

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""
__version_info__ = ...
__version__ = ...
__docformat__ = ...
SUPPORTED_TYPES = ...
INVALID_MODULE_CHARS = ...
class TranslationError(Exception):
    """
    Unmarshalling exception
    """
    ...


def dump(obj, serialize_method=..., ignore_attribute=..., ignore=..., config=...): # -> bytes | str | int | float | bool | list[Any | bytes | str | int | float | bool | list[Any | bytes | str | int | float | bool | list[Any] | dict[Any, Any | bytes | str | int | float | bool | list[Any] | dict[Any, Any] | dict[str, list[str | Any]] | None] | dict[str, list[str | Any]] | None] | dict[Any, Any | bytes | str | int | float | bool | list[Any] | dict[Any, Any] | dict[str, list[str | Any]] | None] | dict[str, list[str | Any]] | None] | dict[Any, Any | bytes | str | int | float | bool | list[Any] | dict[Any, Any] | dict[str, list[str | Any]] | None] | dict[str, list[str | Any]] | None:
    """
    Transforms the given object into a JSON-RPC compliant form.
    Converts beans into dictionaries with a __jsonclass__ entry.
    Doesn't change primitive types.

    :param obj: An object to convert
    :param serialize_method: Custom serialization method
    :param ignore_attribute: Name of the object attribute containing the names
                             of members to ignore
    :param ignore: A list of members to ignore
    :param config: A JSONRPClib Config instance
    :return: A JSON-RPC compliant object
    """
    ...

def load(obj, classes=...): # -> bytes | str | int | float | bool | list[bytes | str | int | float | bool | list[bytes | str | int | float | bool | list[Any] | dict[Any, bytes | str | int | float | bool | list[Any] | dict[Any, Any] | Any | None] | Any | None] | dict[Any, bytes | str | int | float | bool | list[Any] | dict[Any, Any] | Any | None] | Any | None] | dict[Any, bytes | str | int | float | bool | list[Any] | dict[Any, Any] | Any | None] | Any | None:
    """
    If 'obj' is a dictionary containing a __jsonclass__ entry, converts the
    dictionary item into a bean of this class.

    :param obj: An object from a JSON-RPC dictionary
    :param classes: A custom {name: class} dictionary
    :return: The loaded object
    """
    ...

